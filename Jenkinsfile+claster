pipeline {
    agent any

    stages {
        stage('Cleanup old swarm') {
            steps {
                script {
                    sh '''
                    if docker info | grep -q "Swarm: active"; then
                        docker swarm leave --force
                    fi
                    '''
                }
            }
        }

        stage('Initialize Swarm') {
            steps {
                script {
                    sh 'docker swarm init --advertise-addr $(hostname -I | awk "{print $1}")'
                }
            }
        }

        stage('Create Network') {
            steps {
                script {
                    sh 'docker network create --driver overlay mynetwork || true'
                }
            }
        }

        stage('Build Images') {
            steps {
                script {
                    sh '''
                    docker build -t moonyrise/monitor:bek /var/lib/jenkins/workspace/Diplom_moon/BackEnd/Amazon-clone/
                    docker build -t moonyrise/monitor:front /var/lib/jenkins/workspace/Diplom_moon/FrontEnd/my-app/
                    '''
                }
            }
        }

        stage('Push Images') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'eab6834c-3d63-451c-a362-bf326e7b1c6b', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                        docker push moonyrise/monitor:bek
                        docker push moonyrise/monitor:front
                        '''
                    }
                }
            }
        }

        stage('Deploy Stack') {
            steps {
                script {
                    sh 'docker stack deploy -c docker-compose.yml my_stack'
                }
            }
        }

        stage('Check Services') {
            steps {
                script {
                    sh 'docker stack services my_stack'
                }
            }
        }
    }
}
